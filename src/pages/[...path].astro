---
import PageToc from '@components/page-toc'
import SidebarLayout from '@layouts/global-layout.astro'
import { getCollection } from 'astro:content'
import type { GetStaticPaths, InferGetStaticPropsType } from 'astro'
import H2 from '@components/content/h2.astro'
import H3 from '@components/content/h3.astro'
import H4 from '@components/content/h4.astro'
import H5 from '@components/content/h5.astro'
import H6 from '@components/content/h6.astro'
import MobileToc from '@components/mobile-toc'
import { css, cx } from '../../styled-system/css'
import { customProse, prose } from '../../styled-system/recipes'

export const getStaticPaths = (async () => {
  const allArticles = await getCollection('articles')

  return allArticles.map((entry) => ({
    params: { path: entry.slug },
    props: { entry },
  }))
}) satisfies GetStaticPaths

type Props = InferGetStaticPropsType<typeof getStaticPaths>

const { entry } = Astro.props
const { Content, headings } = await entry.render()
---

<SidebarLayout pageTitle={entry.data.title}>
  <div
    class={css({
      display: 'flex',
      position: 'relative',
    })}
  >
    <div
      class={css({
        my: '12',
        w: { base: 'full', xl: 'calc(100% - token(sizes.80))' },
        px: { base: '4', md: '8' },
      })}
    >
      <div
        class={css({
          maxW: 'prose',
          mx: { base: 'auto', lg: '0', xl: 'auto' },
        })}
      >
        <h1
          class={css({
            mb: '2',
            fontSize: { base: '4xl', sm: '5xl' },
            fontWeight: 'medium',
            letterSpacing: 'tight',
            lineHeight: 'tight',
          })}
        >
          {entry.data.title}
        </h1>
        {
          entry.data.lead ? (
            <p
              class={css({
                fontSize: 'xl',
                lineHeight: 'relaxed',
                color: 'gray.700',
              })}
            >
              {entry.data.lead}
            </p>
          ) : null
        }
        <MobileToc client:load>
          <PageToc headings={headings} client:load />
        </MobileToc>
        <div class={cx(prose(), customProse())}>
          <Content
            components={{
              h2: H2,
              h3: H3,
              h4: H4,
              h5: H5,
              h6: H6,
            }}
          />
        </div>
      </div>
    </div>
    {
      headings?.length > 0 ? (
        <aside
          class={css({
            pos: 'fixed',
            top: '16',
            bottom: '0',
            right: '0',
            display: {
              base: 'none',
              xl: 'block',
            },
            flexShrink: '0',
            w: '80',
          })}
        >
          <div class={css({ pos: 'fixed', top: '0', h: 'screen', pt: '16' })}>
            <div class={css({ h: 'full', overflowY: 'auto' })}>
              <div class={css({ mt: '12', mb: '12', pr: '4' })}>
                <div class={css({ mb: '2' })}>
                  <h3
                    id="toc-heading"
                    class={css({
                      fontSize: 'xs',
                      fontWeight: 'bold',
                      letterSpacing: 'wider',
                      color: 'gray.600',
                      textTransform: 'uppercase',
                    })}
                  >
                    Page Contents
                  </h3>
                </div>
                <PageToc headings={headings} client:load />
              </div>
            </div>
          </div>
        </aside>
      ) : null
    }
  </div>
</SidebarLayout>
