---
import NavbarComponent from '@components/navbar.astro'
import { getCollection } from 'astro:content'
import { ViewTransitions } from 'astro:transitions'
import ArticlesAccordion from '@components/articles-accordion'
import { SEO } from 'astro-seo'
import { css } from '../../styled-system/css'

import '@fontsource-variable/inter'
import '@assets/styles/main.css'

interface Props {
  pageTitle?: string
}

const allArticles = await getCollection('articles')
const pathname = Astro.url.pathname

const { pageTitle } = Astro.props

const description = 'Buffalo Green Code Unified Development Ordinance'
const image = new URL('meta/meta-img.jpeg', Astro.url.origin).href
const siteTitle = 'Buffalo Green Code'
const imageAlt =
  'The city of buffalo overlayed with a semitransparent green background and the Buffalo Green Code logo in the middle'
const title = pageTitle ? `${pageTitle} Â· ${siteTitle}` : siteTitle
---

<!doctype html>
<html lang="en" class={css({ h: 'full' })}>
  <head>
    <SEO
      charset="utf-8"
      title={title}
      description={description}
      openGraph={{
        basic: {
          title,
          type: 'website',
          image,
        },
        optional: {
          description,
        },
        image: {
          alt: imageAlt,
          height: 600,
          width: 1080,
          type: 'image/jpeg',
        },
      }}
      twitter={{
        title,
        description,
        image,
        imageAlt,
        card: 'summary_large_image',
      }}
      extend={{
        meta: [
          {
            name: 'viewport',
            content: 'width=device-width,initial-scale=1',
          },
          {
            name: 'google-site-verification',
            content: '2uJ6hXsUDukLmTfNK7Y7jCmnaqyiLptsVDmZ2Ct7Zzk',
          },
        ],
      }}
    />
    <ViewTransitions />
  </head>
  <body
    class={css({
      // fontSmoothing: 'antialiased',
      h: 'full',
      pt: {
        base: '14',
        lg: '16',
      },
      fontFamily: 'inter',
    })}
  >
    <div
      class={css({
        pos: 'fixed',
        top: '0',
        zIndex: '4',
        w: 'full',
      })}
    >
      <NavbarComponent />
    </div>
    <div
      class={css({
        h: 'full',
        overflowY: 'auto',
      })}
    >
      <div
        class={css({
          maxWidth: 'breakpoint-2xl',
          mx: 'auto',
        })}
      >
        <div
          class={css({
            pos: 'fixed',
            top: '0',
            display: {
              base: 'none',
              lg: 'block',
            },
            h: 'full',
            pt: '16',
            w: {
              lg: '72',
              '2xl': '80',
            },
          })}
        >
          <nav
            id="sidenav"
            class={css({
              pos: 'sticky',
              h: 'full',
              overflowY: 'auto',
              borderRightColor: 'gray.200',
              borderRightWidth: '1px',
            })}
          >
            <div
              class={css({
                py: '8',
              })}
            >
              <ArticlesAccordion
                activePath={pathname}
                articles={allArticles.map((a) => ({
                  slug: a.slug,
                  data: a.data,
                }))}
                client:load
                transition:persist
              />
            </div>
          </nav>
        </div>
        <main class={css({ pl: { lg: '72', '2xl': '80' } })}>
          <slot />
        </main>
      </div>
    </div>

    <script>
      document.addEventListener('astro:page-load', () => {
        const sidenav = document.querySelector('#sidenav')
        const sidenavActiveLink = sidenav?.querySelector('[aria-current=page]')

        if (sidenav && sidenavActiveLink) {
          const key = 'scroll-state'
          const savedStateJson = sessionStorage.getItem(key)

          let savedState

          if (savedStateJson) {
            try {
              savedState = JSON.parse(savedStateJson)
              // eslint-disable-next-line style/brace-style
            } catch (e) {
              console.error('Error parsing saved position:', e)
            }
          }

          if (savedState) {
            sidenav.scrollTop = savedState.scrollTop
            // eslint-disable-next-line style/brace-style
          } else {
            sidenavActiveLink.scrollIntoView({
              behavior: 'instant',
              block: 'center',
            })
          }
        }
      })

      document.addEventListener('astro:before-swap', () => {
        const sidenav = document.querySelector('#sidenav')

        if (sidenav) {
          const key = 'scroll-state'
          sessionStorage.setItem(
            key,
            JSON.stringify({
              scrollTop: sidenav.scrollTop,
            }),
          )
        }
      })
    </script>
  </body>
</html>
